openapi: 3.0.0
info:
  title: Delilah
  description: API de pedidos de Delilah Rest√≥
  version: 0.0.1

servers:
  - url: https://api.acamica.com.ar/v1

paths:
 
  /user:  
    post:
      tags:
      - Users
      summary: Creates new user
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Ok. JSON object with id.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/User'
   
  /user/{id}:
    get:
      tags:
      - Users
      summary: Returns user with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: JSON Object
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - Users
      summary: Updates a user with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Ok.
          
    delete:
      tags:
      - Users
      summary: Delete user with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: User deleted
  /user/{id}/orders:
    get:
      tags:
      - Users
      summary: Returns orders from user with {id} sorted by desc date
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 25
            default: 10
        - name: offet
          in: query
          schema:
            type: integer
            format: int64
            default: 0
            minimum: 0
        
      responses:
        '200':
          description: JSON Object
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  
  /order:  
    post:
      tags:
      - Orders
      summary: Creates new order
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Ok. JSON object with id.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Order'
   
  /order/{id}:
    get:
      tags:
      - Orders
      summary: Returns order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: JSON Object
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      tags:
      - Orders
      summary: Updates an order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Ok.
          
    delete:
      tags:
      - Orders
      summary: Delete order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: Order deleted
          
 
                  
  /order/{id}/status:
    get:
      tags:
      - Orders
      summary: Returns status of order with {id}
      parameters: 
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          
      responses:
        '200':
          description: JSON Object
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
    put:
      tags:
      - Orders
      summary: Updates status of order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: Ok.
  
  /order/{id}/orderItem:
    post:
      tags:
      - Orders
      summary: Adds item to order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/OrderLine'
      responses:
        '200':
          description: Ok.
    
  /order/{id}/orderItem/{itemId}:
    put:
      tags:
      - Orders
      summary: Updates item {itemId} in order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/OrderLine'
      responses:
        '200':
          description: Ok.
          
    delete:
      tags:
      - Orders
      summary: Deletes item {itemId} from order with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      responses:
        '200':
          description: Ok.
          
  /orders:
    get:
      tags:
      - Orders
      summary: Returns orders from all users sorted by desc date
      parameters: 
        - name: limit
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 100
            default: 25
        - name: offet
          in: query
          schema:
            type: integer
            format: int64
            default: 0
            minimum: 0
        
      responses:
        '200':
          description: JSON Object
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /product:  
    post:
      tags:
      - Products
      summary: Creates new product
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Ok. JSON object with id.
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Product'
   
  /product/{id}:
    get:
      tags:
      - Products
      summary: Returns product with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: JSON Object
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
      - Products
      summary: Updates a product with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Ok.
          
    delete:
      tags:
      - Products
      summary: Delete product with {id}
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        
      responses:
        '200':
          description: Product deleted
          
components:
  schemas:
    Id:
      description: Record ID
      type: integer
      format: int64
      example: 123
      readOnly: true
    
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'

        username:
          type: string
          example: johnnybgood
        name:
          type: string
          example: Johnny
        lastName:
          type: string
          example: Good
        email:
          type: string
          example: johnny.good@email.com
        address:
          type: string
          example: 34 Summer Str, Atlantida, Earth
        phone:
          type: string
          example: +456 555-1234
        admin:
          type: boolean
    
    Order:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        userId:
          $ref: '#/components/schemas/Id'
        datetime:
          type: string
          format: date-time
          readOnly: true
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        payment:
          $ref: '#/components/schemas/Payment'
        amount:
          $ref: '#/components/schemas/Currency'
        deliveryAdress:
          type: string
          example: 34 Summer Str, Atlantida, Earth
          
    OrderLine:
      type: object
      properties:
        productId:
            type: integer
            format: int64
            example: 23
        quantity:
          format: int64
          example: 1
        
    OrderItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          format: int64
          example: 1
        price:
          $ref: '#/components/schemas/Currency'
    
    OrderStatus:
      description: Order status
      type: string
      enum:
      - new
      - confirmed
      - preparing
      - delivering
      - delivered
      readOnly: true
      
    Currency:
      description: Currency
      type: number
      format: float
      example: 15.50
      
    Payment:
      description: Payment type
      type: string
      enum:
      - card
      - cash
    
    Product:
      description: Product type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          example: Filet Mignon
        imgUrl:
          type: string
          example: https://images.com/filet_mignon.png
        price:
          $ref: '#/components/schemas/Currency'
                      